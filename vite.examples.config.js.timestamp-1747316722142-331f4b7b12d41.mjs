// vite.examples.config.js
import { defineConfig } from "file:///D:/office/assistents/voiceVisualizerV1/voice-visualizer-react/node_modules/vite/dist/node/index.js";
import react from "file:///D:/office/assistents/voiceVisualizerV1/voice-visualizer-react/node_modules/@vitejs/plugin-react/dist/index.mjs";
import path from "path";
import tailwindcss from "file:///D:/office/assistents/voiceVisualizerV1/voice-visualizer-react/node_modules/tailwindcss/lib/index.js";
import autoprefixer from "file:///D:/office/assistents/voiceVisualizerV1/voice-visualizer-react/node_modules/autoprefixer/lib/autoprefixer.js";
var __vite_injected_original_dirname = "D:\\office\\assistents\\voiceVisualizerV1\\voice-visualizer-react";
var isProduction = process.env.NODE_ENV === "production";
var vite_examples_config_default = defineConfig({
  plugins: [react()],
  root: "./examples",
  build: {
    outDir: "../examples-dist",
    emptyOutDir: true
  },
  css: {
    postcss: {
      plugins: [
        tailwindcss({
          config: path.resolve(__vite_injected_original_dirname, "./examples/tailwind.config.js")
        }),
        autoprefixer()
      ]
    }
  },
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "./examples")
    }
  },
  server: {
    port: 3e3
  },
  // Use the repository name as base path only in production build
  base: isProduction ? "/audio-visualizer/" : "/"
  // This should match your repository name
});
export {
  vite_examples_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5leGFtcGxlcy5jb25maWcuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxvZmZpY2VcXFxcYXNzaXN0ZW50c1xcXFx2b2ljZVZpc3VhbGl6ZXJWMVxcXFx2b2ljZS12aXN1YWxpemVyLXJlYWN0XCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJEOlxcXFxvZmZpY2VcXFxcYXNzaXN0ZW50c1xcXFx2b2ljZVZpc3VhbGl6ZXJWMVxcXFx2b2ljZS12aXN1YWxpemVyLXJlYWN0XFxcXHZpdGUuZXhhbXBsZXMuY29uZmlnLmpzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9EOi9vZmZpY2UvYXNzaXN0ZW50cy92b2ljZVZpc3VhbGl6ZXJWMS92b2ljZS12aXN1YWxpemVyLXJlYWN0L3ZpdGUuZXhhbXBsZXMuY29uZmlnLmpzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcclxuaW1wb3J0IHJlYWN0IGZyb20gXCJAdml0ZWpzL3BsdWdpbi1yZWFjdFwiO1xyXG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xyXG5pbXBvcnQgdGFpbHdpbmRjc3MgZnJvbSBcInRhaWx3aW5kY3NzXCI7XHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImF1dG9wcmVmaXhlclwiO1xyXG5cclxuLy8gRGV0ZXJtaW5lIGlmIHdlJ3JlIGJ1aWxkaW5nIGZvciBwcm9kdWN0aW9uIG9yIGRldmVsb3BtZW50XHJcbmNvbnN0IGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XHJcbiAgcGx1Z2luczogW3JlYWN0KCldLFxyXG4gIHJvb3Q6IFwiLi9leGFtcGxlc1wiLFxyXG4gIGJ1aWxkOiB7XHJcbiAgICBvdXREaXI6IFwiLi4vZXhhbXBsZXMtZGlzdFwiLFxyXG4gICAgZW1wdHlPdXREaXI6IHRydWUsXHJcbiAgfSxcclxuICBjc3M6IHtcclxuICAgIHBvc3Rjc3M6IHtcclxuICAgICAgcGx1Z2luczogW1xyXG4gICAgICAgIHRhaWx3aW5kY3NzKHtcclxuICAgICAgICAgIGNvbmZpZzogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCIuL2V4YW1wbGVzL3RhaWx3aW5kLmNvbmZpZy5qc1wiKSxcclxuICAgICAgICB9KSxcclxuICAgICAgICBhdXRvcHJlZml4ZXIoKSxcclxuICAgICAgXSxcclxuICAgIH0sXHJcbiAgfSxcclxuICByZXNvbHZlOiB7XHJcbiAgICBhbGlhczoge1xyXG4gICAgICBcIkBcIjogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCIuL2V4YW1wbGVzXCIpLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIHNlcnZlcjoge1xyXG4gICAgcG9ydDogMzAwMCxcclxuICB9LFxyXG4gIC8vIFVzZSB0aGUgcmVwb3NpdG9yeSBuYW1lIGFzIGJhc2UgcGF0aCBvbmx5IGluIHByb2R1Y3Rpb24gYnVpbGRcclxuICBiYXNlOiBpc1Byb2R1Y3Rpb24gPyBcIi9hdWRpby12aXN1YWxpemVyL1wiIDogXCIvXCIsIC8vIFRoaXMgc2hvdWxkIG1hdGNoIHlvdXIgcmVwb3NpdG9yeSBuYW1lXHJcbn0pOyJdLAogICJtYXBwaW5ncyI6ICI7QUFBcVksU0FBUyxvQkFBb0I7QUFDbGEsT0FBTyxXQUFXO0FBQ2xCLE9BQU8sVUFBVTtBQUNqQixPQUFPLGlCQUFpQjtBQUN4QixPQUFPLGtCQUFrQjtBQUp6QixJQUFNLG1DQUFtQztBQU96QyxJQUFNLGVBQWUsUUFBUSxJQUFJLGFBQWE7QUFFOUMsSUFBTywrQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUyxDQUFDLE1BQU0sQ0FBQztBQUFBLEVBQ2pCLE1BQU07QUFBQSxFQUNOLE9BQU87QUFBQSxJQUNMLFFBQVE7QUFBQSxJQUNSLGFBQWE7QUFBQSxFQUNmO0FBQUEsRUFDQSxLQUFLO0FBQUEsSUFDSCxTQUFTO0FBQUEsTUFDUCxTQUFTO0FBQUEsUUFDUCxZQUFZO0FBQUEsVUFDVixRQUFRLEtBQUssUUFBUSxrQ0FBVywrQkFBK0I7QUFBQSxRQUNqRSxDQUFDO0FBQUEsUUFDRCxhQUFhO0FBQUEsTUFDZjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsRUFDQSxTQUFTO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxZQUFZO0FBQUEsSUFDM0M7QUFBQSxFQUNGO0FBQUEsRUFDQSxRQUFRO0FBQUEsSUFDTixNQUFNO0FBQUEsRUFDUjtBQUFBO0FBQUEsRUFFQSxNQUFNLGVBQWUsdUJBQXVCO0FBQUE7QUFDOUMsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
