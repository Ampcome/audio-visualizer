import{jsx as e}from"react/jsx-runtime";import{useRef as n,useState as r,useMemo as t,useEffect as o,useCallback as i}from"react";import{GUI as a}from"dat.gui";import*as c from"three";import{OrbitControls as u}from"three/examples/jsm/controls/OrbitControls.js";import{EffectComposer as s}from"three/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass as l}from"three/examples/jsm/postprocessing/RenderPass.js";import{UnrealBloomPass as d}from"three/examples/jsm/postprocessing/UnrealBloomPass.js";import{OutputPass as m}from"three/examples/jsm/postprocessing/OutputPass.js";const g=({audioData:i,isListening:g,initialQuality:v="medium",orbColors:f,canvasColor:p=0,initialGlow:h,enableOrbitControls:y=!0,autoRotate:w=!1,showGui:x=!1,guiPositionTop:b=100,inertiaEnabled:z=!0,inertiaLevel:P=.05,zoomEnabled:_=!1,spikeLevel:C=5.5,smoothnessLevel:A=.7,className:M="",containerStyle:D={}})=>{const S=n(null),E=n(null),F=n(null),L=n(null),j=n(null),q=n(null),U=n(null),W=n(null),k=n(null),I=n(null),R=n(0);n([]);const[H,$]=r({x:0,y:0});r(0);const[B,T]=r(v),G=t((()=>{if("undefined"==typeof window)return{isMobile:!1,isLowEndDevice:!1,initialQuality:v};const e=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent),n=e||(window.navigator.hardwareConcurrency||4)<=4;return{isMobile:e,isLowEndDevice:n,initialQuality:n?"low":v}}),[v]),Q=e=>"number"==typeof e||"string"==typeof e?new c.Color(e):e&&"object"==typeof e&&"r"in e&&"g"in e&&"b"in e?new c.Color(e.r/255,e.g/255,e.b/255):new c.Color(0);o((()=>{T(G.initialQuality)}),[G.initialQuality]);const N=e=>{switch(e){case"low":return.8;case"high":return 2;default:return 1.2}},V=n({u_time:{value:0},u_amplitude:{value:1.5},u_bass:{value:.5},u_mid:{value:.5},u_treble:{value:.5},u_red:{value:f?.red?f?.red/255:1},u_green:{value:f?.green?f?.green/255:1},u_blue:{value:f?.blue?f?.blue/255:1},u_detail:{value:N(B)}}),O=n({threshold:h?.threshold??.5,strength:h?.strength??.2,radius:h?.radius??.5});return o((()=>{if(!S.current)return;V.current.u_detail.value=N(B);const e=new c.Scene;e.background=Q(p),L.current=e;const n=new c.Clock;q.current=n;const r=new c.PerspectiveCamera(45,S.current?.clientWidth/S.current?.clientHeight,.1,1e3);r.position.set(0,-2,14),r.lookAt(0,0,0),j.current=r;try{const e=new c.WebGLRenderer({antialias:!0,alpha:!0,powerPreference:"high-performance",precision:"low"===B?"mediump":"highp"});e.setSize(S.current?.clientWidth,S.current?.clientHeight);const n=()=>{const e=window.devicePixelRatio||1;return G.isLowEndDevice?Math.min(e,1):"low"===B?Math.min(e,1.5):"medium"===B?Math.min(e,2):e};if(e.setPixelRatio(n()),e.setClearColor(Q(p).getHex(),1),e.outputColorSpace=c.SRGBColorSpace,S.current.firstChild&&S.current.removeChild(S.current.firstChild),S.current.appendChild(e.domElement),E.current=e,y){const n=new u(r,e.domElement);n.enableDamping=z,n.dampingFactor=P,n.enableZoom=_,n.autoRotate=w,n.update()}}catch(e){}const t=new c.ShaderMaterial({vertexShader:"\n// Simplified noise function based on simplex noise\n// Much more efficient than full Perlin noise implementation\nuniform float u_time;\n\nvec3 mod289(vec3 x)\n    {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\nvec4 mod289(vec4 x)\n    {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\nvec4 permute(vec4 x)\n    {\n        return mod289(((x*34.0)+10.0)*x);\n    }\n\nvec4 taylorInvSqrt(vec4 r)\n    {\n        return 1.79284291400159 - 0.85373472095314 * r;\n    }\n\nvec3 fade(vec3 t) {\n        return t*t*t*(t*(t*6.0-15.0)+10.0);\n    }\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n    {\n        vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n        vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n        Pi0 = mod289(Pi0);\n        Pi1 = mod289(Pi1);\n        vec3 Pf0 = fract(P); // Fractional part for interpolation\n        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n        vec4 iz0 = Pi0.zzzz;\n        vec4 iz1 = Pi1.zzzz;\n\n        vec4 ixy = permute(permute(ix) + iy);\n        vec4 ixy0 = permute(ixy + iz0);\n        vec4 ixy1 = permute(ixy + iz1);\n\n        vec4 gx0 = ixy0 * (1.0 / 7.0);\n        vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n        gx0 = fract(gx0);\n        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n        vec4 sz0 = step(gz0, vec4(0.0));\n        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n        vec4 gx1 = ixy1 * (1.0 / 7.0);\n        vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n        gx1 = fract(gx1);\n        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n        vec4 sz1 = step(gz1, vec4(0.0));\n        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n        g000 *= norm0.x;\n        g010 *= norm0.y;\n        g100 *= norm0.z;\n        g110 *= norm0.w;\n        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n        g001 *= norm1.x;\n        g011 *= norm1.y;\n        g101 *= norm1.z;\n        g111 *= norm1.w;\n\n        float n000 = dot(g000, Pf0);\n        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n        float n111 = dot(g111, Pf1);\n\n        vec3 fade_xyz = fade(Pf0);\n        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n        return 2.2 * n_xyz;\n    }\n\n// Uniforms\nuniform float u_amplitude;\nuniform float u_bass;\nuniform float u_mid;\nuniform float u_treble;\nuniform float u_detail;\n\n// Varying variables to pass to fragment shader\nvarying vec3 vNormal;\n\nvoid main() {\n  // Calculate noise based on position and time\n  // Use u_detail to control level of detail (lower = better performance)\n  float noise = 3.0 * pnoise(position + u_time, vec3(10.0));\n  \n  // Calculate displacement based on audio frequencies\n  float bassDisplacement = u_bass * noise * 0.5;\n  float midDisplacement = u_mid * noise * 0.3;\n  float trebleDisplacement = u_treble * noise * 0.2;\n  \n  // Combine displacements with amplitude control\n  float displacement = u_amplitude * (bassDisplacement + midDisplacement + trebleDisplacement) * (noise / 10.);\n  \n  // Apply displacement along normal direction\n  vec3 newPosition = position + normal * displacement;\n  \n  // Pass normal to fragment shader\n  vNormal = normal;\n  \n  // Set final position\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n}\n",fragmentShader:"\n// Color uniforms\nuniform float u_red;\nuniform float u_green;\nuniform float u_blue;\n\n// Varying variables received from vertex shader\nvarying vec3 vNormal;\n\nvoid main() {\n  // Apply color based on uniform values\n  gl_FragColor = vec4(vec3(u_red, u_green, u_blue), 1.0);\n}\n",wireframe:!0,uniforms:V.current}),o=(e=>{switch(e){case"low":return 20;case"high":return 40;default:return 30}})(B),i=new c.IcosahedronGeometry(4,Math.min(o,30));i.index&&(i.index.needsUpdate=!0),i.attributes.position.needsUpdate=!0,i.attributes.normal.needsUpdate=!0;const g=new c.Mesh(i,t);e.add(g),F.current=g;const v=new l(L.current,j.current),f=new d(new c.Vector2(S.current?.clientWidth,S.current?.clientHeight),O.current.strength,O.current.radius,O.current.threshold);W.current=f;const h=new m;if(E.current){const e=new s(E.current);e.addPass(v),e.addPass(f),e.addPass(h),e.setSize(S.current?.clientWidth,S.current?.clientHeight),U.current=e}if(x){const e=new a;e.domElement.style.position="absolute",e.domElement.style.top=`${b}px`,e.domElement.style.right="0px",k.current=e;const n=e.addFolder("Colors");n.add(V.current.u_red,"value",0,1).name("Red"),n.add(V.current.u_green,"value",0,1).name("Green"),n.add(V.current.u_blue,"value",0,1).name("Blue");const r=e.addFolder("Bloom");r.add(O.current,"threshold",0,1).name("Threshold").onChange((e=>{W.current&&(W.current.threshold=e)})),r.add(O.current,"strength",0,3).name("Strength").onChange((e=>{W.current&&(W.current.strength=e)})),r.add(O.current,"radius",0,1).name("Radius").onChange((e=>{W.current&&(W.current.radius=e)}));e.addFolder("Settings").add({quality:B},"quality",["low","medium","high"]).name("Quality").onChange((e=>{T(e)}))}const C=()=>{if(!S.current||!E.current||!j.current)return;const e=S.current.clientWidth,n=S.current.clientHeight;j.current.aspect=e/n,j.current.updateProjectionMatrix(),E.current.setSize(e,n),U.current&&U.current.setSize(e,n)};return window.addEventListener("resize",C),()=>{window.removeEventListener("resize",C),I.current&&(cancelAnimationFrame(I.current),I.current=null),E.current&&S.current&&S.current.removeChild(E.current.domElement),F.current&&(F.current.geometry.dispose(),F.current.material.dispose()),k.current&&k.current.destroy()}}),[S.current?.clientWidth,S.current?.clientHeight,B,G.isLowEndDevice,y,w,x,z,P,_]),o((()=>{const e=e=>{const n=window.innerWidth/2,r=window.innerHeight/2;$({x:(e.clientX-n)/100,y:(e.clientY-r)/100})};return window.addEventListener("mousemove",e),()=>{window.removeEventListener("mousemove",e)}}),[]),o((()=>{if(!(L.current&&j.current&&q.current&&E.current&&F.current))return;const e=1e3/(e=>{switch(e){case"low":return 30;case"high":return 60;default:return 45}})(B),n=()=>{if(I.current=requestAnimationFrame(n),!(j.current&&L.current&&q.current&&E.current&&V.current&&F.current))return;const r=performance.now();if(!(r-R.current<e)){j.current.position.x+=.05*(H.x-j.current.position.x),j.current.position.y+=.5*(-H.y-j.current.position.y),j.current.lookAt(L.current.position),V.current.u_time.value=q.current.getElapsedTime();try{if(i&&g&&i.length>0)try{const e=i.length,n=Math.max(1,Math.floor(e/64)),r=Math.floor(.1*e);let t=0;for(let e=0;e<r;e+=n)t+=i[e]||0;const o=t/Math.ceil(r/n)||0,a=r,c=Math.floor(.5*e);let u=0;for(let e=a;e<c;e+=n)u+=i[e]||0;const s=u/Math.ceil((c-a)/n)||0,l=c;let d=0;for(let r=l;r<e;r+=n)d+=i[r]||0;const m=d/Math.ceil((e-l)/n)||0;V.current.u_bass.value=V.current.u_bass.value*(1-A)+o/255*C*A,V.current.u_mid.value=V.current.u_mid.value*(1-A)+s/255*C*A,V.current.u_treble.value=V.current.u_treble.value*(1-A)+m/255*C*A;const g=(o+s+m)/3;V.current.u_amplitude.value=V.current.u_amplitude.value*(1-A)+(.5+g/255*C)*A}catch(e){const n=q.current.getElapsedTime();V.current.u_amplitude.value=1+.3*Math.sin(.2*n)}else V.current.u_amplitude.value=0,V.current.u_bass.value=0,V.current.u_mid.value=0,V.current.u_treble.value=0,F.current&&(F.current.rotation.y+=.001);if(F.current&&(F.current.rotation.y+=.001),U.current)try{U.current.render()}catch(e){E.current.render(L.current,j.current)}else E.current.render(L.current,j.current);R.current=r}catch(e){}}};return I.current=requestAnimationFrame(n),()=>{I.current&&(cancelAnimationFrame(I.current),I.current=null)}}),[H,i,g,B,A,C]),e("div",{ref:S,"aria-label":"3D Audio Visualizer",style:{width:"100%",height:"100%",overflow:"hidden",backgroundColor:(Y=p,"number"==typeof Y?`#${Y.toString(16).padStart(6,"0")}`:"string"==typeof Y?Y.startsWith("#")||Y.startsWith("rgb")||/^[a-z]+$/i.test(Y)?Y:/^[0-9A-F]{6}$/i.test(Y)?`#${Y}`:"#000000":Y&&"object"==typeof Y&&"r"in Y&&"g"in Y&&"b"in Y?`rgb(${Y.r}, ${Y.g}, ${Y.b})`:"#000000"),position:"relative",...D},className:M});var Y},v=()=>{const[e,t]=r(!1),[a,c]=r((()=>{const e=new Uint8Array(128);for(let n=0;n<e.length;n++)e[n]=Math.floor(40+20*Math.sin(.1*n));return e})),[u,s]=r(null),l=n(null),d=n(null),m=n(null),g=n(null),v=n(null),f=i((()=>{g.current&&(cancelAnimationFrame(g.current),g.current=null),m.current&&(m.current.getTracks().forEach((e=>e.stop())),m.current=null),l.current&&"closed"!==l.current.state&&(l.current.close().catch(console.error),l.current=null),d.current=null,v.current=null}),[]);o((()=>("undefined"!=typeof window&&(void 0!==window.AudioContext||void 0!==window.webkitAudioContext)&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||s("Your browser does not support the required audio APIs"),f)),[f]);return{isListening:e,audioData:a,error:u,startListening:i((async()=>{try{if(f(),s(null),"undefined"==typeof window||void 0===window.AudioContext&&void 0===window.webkitAudioContext)throw new Error("Your browser does not support Web Audio API");if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Media Devices API not supported in this browser");const e=await navigator.mediaDevices.getUserMedia({audio:!0});m.current=e;const n=new(window.AudioContext||window.webkitAudioContext);l.current=n,"suspended"===n.state&&await n.resume();const r=n.createAnalyser();r.fftSize=512,r.smoothingTimeConstant=.7,r.minDecibels=-90,r.maxDecibels=-10,d.current=r;n.createMediaStreamSource(e).connect(r);const o=new Uint8Array(r.frequencyBinCount);v.current=o,r.getByteFrequencyData(o),c(new Uint8Array(o));const i=()=>{if(d.current&&v.current)try{d.current.getByteFrequencyData(v.current);const e=new Uint8Array(v.current);c(e),g.current=requestAnimationFrame(i)}catch(e){g.current&&(cancelAnimationFrame(g.current),setTimeout((()=>{g.current=requestAnimationFrame(i)}),100))}};g.current=requestAnimationFrame(i),t(!0)}catch(e){f();const n=e instanceof Error?e.message:"Failed to access microphone";s(n)}}),[f]),stopListening:i((()=>{f(),t(!1);const e=new Uint8Array(128);for(let n=0;n<e.length;n++)e[n]=Math.floor(30+15*Math.sin(.1*n));c(e)}),[f])}};export{g as AudioVisualizer,v as useAudioListener};
//# sourceMappingURL=index.esm.js.map
