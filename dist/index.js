"use strict";var e=require("react/jsx-runtime"),n=require("react"),t=require("dat.gui"),r=require("three"),i=require("three/examples/jsm/controls/OrbitControls.js"),o=require("three/examples/jsm/postprocessing/EffectComposer.js"),u=require("three/examples/jsm/postprocessing/RenderPass.js"),a=require("three/examples/jsm/postprocessing/UnrealBloomPass.js"),c=require("three/examples/jsm/postprocessing/OutputPass.js");function s(e){var n=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})}})),n.default=e,Object.freeze(n)}var l=s(r);exports.AudioVisualizer=({audioData:r,isListening:s,initialQuality:d="medium",orbColors:m,canvasColor:g=0,initialGlow:f,enableOrbitControls:v=!0,autoRotate:p=!1,showGui:h=!1,guiPositionTop:y=100,inertiaEnabled:w=!0,inertiaLevel:x=.05,zoomEnabled:b=!1,spikeLevel:z=5.5,smoothnessLevel:P=.7,className:_="",containerStyle:C={}})=>{const A=n.useRef(null),E=n.useRef(null),M=n.useRef(null),S=n.useRef(null),R=n.useRef(null),D=n.useRef(null),q=n.useRef(null),j=n.useRef(null),F=n.useRef(null),L=n.useRef(null),U=n.useRef(0);n.useRef([]);const[k,O]=n.useState({x:0,y:0});n.useState(0);const[W,I]=n.useState(d),B=n.useMemo((()=>{if("undefined"==typeof window)return{isMobile:!1,isLowEndDevice:!1,initialQuality:d};const e=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent),n=e||(window.navigator.hardwareConcurrency||4)<=4;return{isMobile:e,isLowEndDevice:n,initialQuality:n?"low":d}}),[d]),H=e=>"number"==typeof e||"string"==typeof e?new l.Color(e):e&&"object"==typeof e&&"r"in e&&"g"in e&&"b"in e?new l.Color(e.r/255,e.g/255,e.b/255):new l.Color(0);n.useEffect((()=>{I(B.initialQuality)}),[B.initialQuality]);const $=e=>{switch(e){case"low":return.8;case"high":return 2;default:return 1.2}},G=n.useRef({u_time:{value:0},u_amplitude:{value:1.5},u_bass:{value:.5},u_mid:{value:.5},u_treble:{value:.5},u_red:{value:m?.red?m?.red/255:1},u_green:{value:m?.green?m?.green/255:1},u_blue:{value:m?.blue?m?.blue/255:1},u_detail:{value:$(W)}}),T=n.useRef({threshold:f?.threshold??.5,strength:f?.strength??.2,radius:f?.radius??.5});return n.useEffect((()=>{if(!A.current)return;G.current.u_detail.value=$(W);const e=new l.Scene;e.background=H(g),S.current=e;const n=new l.Clock;D.current=n;const r=new l.PerspectiveCamera(45,A.current?.clientWidth/A.current?.clientHeight,.1,1e3);r.position.set(0,-2,14),r.lookAt(0,0,0),R.current=r;try{const e=new l.WebGLRenderer({antialias:!0,alpha:!0,powerPreference:"high-performance",precision:"low"===W?"mediump":"highp"});e.setSize(A.current?.clientWidth,A.current?.clientHeight);const n=()=>{const e=window.devicePixelRatio||1;return B.isLowEndDevice?Math.min(e,1):"low"===W?Math.min(e,1.5):"medium"===W?Math.min(e,2):e};if(e.setPixelRatio(n()),e.setClearColor(H(g).getHex(),1),e.outputColorSpace=l.SRGBColorSpace,A.current.firstChild&&A.current.removeChild(A.current.firstChild),A.current.appendChild(e.domElement),E.current=e,v){const n=new i.OrbitControls(r,e.domElement);n.enableDamping=w,n.dampingFactor=x,n.enableZoom=b,n.autoRotate=p,n.update()}}catch(e){}const s=new l.ShaderMaterial({vertexShader:"\n// Simplified noise function based on simplex noise\n// Much more efficient than full Perlin noise implementation\nuniform float u_time;\n\nvec3 mod289(vec3 x)\n    {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\nvec4 mod289(vec4 x)\n    {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\nvec4 permute(vec4 x)\n    {\n        return mod289(((x*34.0)+10.0)*x);\n    }\n\nvec4 taylorInvSqrt(vec4 r)\n    {\n        return 1.79284291400159 - 0.85373472095314 * r;\n    }\n\nvec3 fade(vec3 t) {\n        return t*t*t*(t*(t*6.0-15.0)+10.0);\n    }\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n    {\n        vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n        vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n        Pi0 = mod289(Pi0);\n        Pi1 = mod289(Pi1);\n        vec3 Pf0 = fract(P); // Fractional part for interpolation\n        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n        vec4 iz0 = Pi0.zzzz;\n        vec4 iz1 = Pi1.zzzz;\n\n        vec4 ixy = permute(permute(ix) + iy);\n        vec4 ixy0 = permute(ixy + iz0);\n        vec4 ixy1 = permute(ixy + iz1);\n\n        vec4 gx0 = ixy0 * (1.0 / 7.0);\n        vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n        gx0 = fract(gx0);\n        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n        vec4 sz0 = step(gz0, vec4(0.0));\n        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n        vec4 gx1 = ixy1 * (1.0 / 7.0);\n        vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n        gx1 = fract(gx1);\n        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n        vec4 sz1 = step(gz1, vec4(0.0));\n        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n        g000 *= norm0.x;\n        g010 *= norm0.y;\n        g100 *= norm0.z;\n        g110 *= norm0.w;\n        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n        g001 *= norm1.x;\n        g011 *= norm1.y;\n        g101 *= norm1.z;\n        g111 *= norm1.w;\n\n        float n000 = dot(g000, Pf0);\n        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n        float n111 = dot(g111, Pf1);\n\n        vec3 fade_xyz = fade(Pf0);\n        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n        return 2.2 * n_xyz;\n    }\n\n// Uniforms\nuniform float u_amplitude;\nuniform float u_bass;\nuniform float u_mid;\nuniform float u_treble;\nuniform float u_detail;\n\n// Varying variables to pass to fragment shader\nvarying vec3 vNormal;\n\nvoid main() {\n  // Calculate noise based on position and time\n  // Use u_detail to control level of detail (lower = better performance)\n  float noise = 3.0 * pnoise(position + u_time, vec3(10.0));\n  \n  // Calculate displacement based on audio frequencies\n  float bassDisplacement = u_bass * noise * 0.5;\n  float midDisplacement = u_mid * noise * 0.3;\n  float trebleDisplacement = u_treble * noise * 0.2;\n  \n  // Combine displacements with amplitude control\n  float displacement = u_amplitude * (bassDisplacement + midDisplacement + trebleDisplacement) * (noise / 10.);\n  \n  // Apply displacement along normal direction\n  vec3 newPosition = position + normal * displacement;\n  \n  // Pass normal to fragment shader\n  vNormal = normal;\n  \n  // Set final position\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n}\n",fragmentShader:"\n// Color uniforms\nuniform float u_red;\nuniform float u_green;\nuniform float u_blue;\n\n// Varying variables received from vertex shader\nvarying vec3 vNormal;\n\nvoid main() {\n  // Apply color based on uniform values\n  gl_FragColor = vec4(vec3(u_red, u_green, u_blue), 1.0);\n}\n",wireframe:!0,uniforms:G.current}),d=(e=>{switch(e){case"low":return 20;case"high":return 40;default:return 30}})(W),m=new l.IcosahedronGeometry(4,Math.min(d,30));m.index&&(m.index.needsUpdate=!0),m.attributes.position.needsUpdate=!0,m.attributes.normal.needsUpdate=!0;const f=new l.Mesh(m,s);e.add(f),M.current=f;const z=new u.RenderPass(S.current,R.current),P=new a.UnrealBloomPass(new l.Vector2(A.current?.clientWidth,A.current?.clientHeight),T.current.strength,T.current.radius,T.current.threshold);j.current=P;const _=new c.OutputPass;if(E.current){const e=new o.EffectComposer(E.current);e.addPass(z),e.addPass(P),e.addPass(_),e.setSize(A.current?.clientWidth,A.current?.clientHeight),q.current=e}if(h){const e=new t.GUI;e.domElement.style.position="absolute",e.domElement.style.top=`${y}px`,e.domElement.style.right="0px",F.current=e;const n=e.addFolder("Colors");n.add(G.current.u_red,"value",0,1).name("Red"),n.add(G.current.u_green,"value",0,1).name("Green"),n.add(G.current.u_blue,"value",0,1).name("Blue");const r=e.addFolder("Bloom");r.add(T.current,"threshold",0,1).name("Threshold").onChange((e=>{j.current&&(j.current.threshold=e)})),r.add(T.current,"strength",0,3).name("Strength").onChange((e=>{j.current&&(j.current.strength=e)})),r.add(T.current,"radius",0,1).name("Radius").onChange((e=>{j.current&&(j.current.radius=e)}));e.addFolder("Settings").add({quality:W},"quality",["low","medium","high"]).name("Quality").onChange((e=>{I(e)}))}const C=()=>{if(!A.current||!E.current||!R.current)return;const e=A.current.clientWidth,n=A.current.clientHeight;R.current.aspect=e/n,R.current.updateProjectionMatrix(),E.current.setSize(e,n),q.current&&q.current.setSize(e,n)};return window.addEventListener("resize",C),()=>{window.removeEventListener("resize",C),L.current&&(cancelAnimationFrame(L.current),L.current=null),E.current&&A.current&&A.current.removeChild(E.current.domElement),M.current&&(M.current.geometry.dispose(),M.current.material.dispose()),F.current&&F.current.destroy()}}),[A.current?.clientWidth,A.current?.clientHeight,W,B.isLowEndDevice,v,p,h,w,x,b]),n.useEffect((()=>{const e=e=>{const n=window.innerWidth/2,t=window.innerHeight/2;O({x:(e.clientX-n)/100,y:(e.clientY-t)/100})};return window.addEventListener("mousemove",e),()=>{window.removeEventListener("mousemove",e)}}),[]),n.useEffect((()=>{if(!(S.current&&R.current&&D.current&&E.current&&M.current))return;const e=1e3/(e=>{switch(e){case"low":return 30;case"high":return 60;default:return 45}})(W),n=()=>{if(L.current=requestAnimationFrame(n),!(R.current&&S.current&&D.current&&E.current&&G.current&&M.current))return;const t=performance.now();if(!(t-U.current<e)){R.current.position.x+=.05*(k.x-R.current.position.x),R.current.position.y+=.5*(-k.y-R.current.position.y),R.current.lookAt(S.current.position),G.current.u_time.value=D.current.getElapsedTime();try{if(r&&s&&r.length>0)try{const e=r.length,n=Math.max(1,Math.floor(e/64)),t=Math.floor(.1*e);let i=0;for(let e=0;e<t;e+=n)i+=r[e]||0;const o=i/Math.ceil(t/n)||0,u=t,a=Math.floor(.5*e);let c=0;for(let e=u;e<a;e+=n)c+=r[e]||0;const s=c/Math.ceil((a-u)/n)||0,l=a;let d=0;for(let t=l;t<e;t+=n)d+=r[t]||0;const m=d/Math.ceil((e-l)/n)||0;G.current.u_bass.value=G.current.u_bass.value*(1-P)+o/255*z*P,G.current.u_mid.value=G.current.u_mid.value*(1-P)+s/255*z*P,G.current.u_treble.value=G.current.u_treble.value*(1-P)+m/255*z*P;const g=(o+s+m)/3;G.current.u_amplitude.value=G.current.u_amplitude.value*(1-P)+(.5+g/255*z)*P}catch(e){const n=D.current.getElapsedTime();G.current.u_amplitude.value=1+.3*Math.sin(.2*n)}else G.current.u_amplitude.value=0,G.current.u_bass.value=0,G.current.u_mid.value=0,G.current.u_treble.value=0,M.current&&(M.current.rotation.y+=.001);if(M.current&&(M.current.rotation.y+=.001),q.current)try{q.current.render()}catch(e){E.current.render(S.current,R.current)}else E.current.render(S.current,R.current);U.current=t}catch(e){}}};return L.current=requestAnimationFrame(n),()=>{L.current&&(cancelAnimationFrame(L.current),L.current=null)}}),[k,r,s,W,P,z]),e.jsx("div",{ref:A,"aria-label":"3D Audio Visualizer",style:{width:"100%",height:"100%",overflow:"hidden",backgroundColor:(Q=g,"number"==typeof Q?`#${Q.toString(16).padStart(6,"0")}`:"string"==typeof Q?Q.startsWith("#")||Q.startsWith("rgb")||/^[a-z]+$/i.test(Q)?Q:/^[0-9A-F]{6}$/i.test(Q)?`#${Q}`:"#000000":Q&&"object"==typeof Q&&"r"in Q&&"g"in Q&&"b"in Q?`rgb(${Q.r}, ${Q.g}, ${Q.b})`:"#000000"),position:"relative",...C},className:_});var Q},exports.useAudioListener=()=>{const[e,t]=n.useState(!1),[r,i]=n.useState((()=>{const e=new Uint8Array(128);for(let n=0;n<e.length;n++)e[n]=Math.floor(40+20*Math.sin(.1*n));return e})),[o,u]=n.useState(null),a=n.useRef(null),c=n.useRef(null),s=n.useRef(null),l=n.useRef(null),d=n.useRef(null),m=n.useCallback((()=>{l.current&&(cancelAnimationFrame(l.current),l.current=null),s.current&&(s.current.getTracks().forEach((e=>e.stop())),s.current=null),a.current&&"closed"!==a.current.state&&(a.current.close().catch(console.error),a.current=null),c.current=null,d.current=null}),[]);n.useEffect((()=>("undefined"!=typeof window&&(void 0!==window.AudioContext||void 0!==window.webkitAudioContext)&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||u("Your browser does not support the required audio APIs"),m)),[m]);return{isListening:e,audioData:r,error:o,startListening:n.useCallback((async()=>{try{if(m(),u(null),"undefined"==typeof window||void 0===window.AudioContext&&void 0===window.webkitAudioContext)throw new Error("Your browser does not support Web Audio API");if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Media Devices API not supported in this browser");const e=await navigator.mediaDevices.getUserMedia({audio:!0});s.current=e;const n=new(window.AudioContext||window.webkitAudioContext);a.current=n,"suspended"===n.state&&await n.resume();const r=n.createAnalyser();r.fftSize=512,r.smoothingTimeConstant=.7,r.minDecibels=-90,r.maxDecibels=-10,c.current=r;n.createMediaStreamSource(e).connect(r);const o=new Uint8Array(r.frequencyBinCount);d.current=o,r.getByteFrequencyData(o),i(new Uint8Array(o));const g=()=>{if(c.current&&d.current)try{c.current.getByteFrequencyData(d.current);const e=new Uint8Array(d.current);i(e),l.current=requestAnimationFrame(g)}catch(e){l.current&&(cancelAnimationFrame(l.current),setTimeout((()=>{l.current=requestAnimationFrame(g)}),100))}};l.current=requestAnimationFrame(g),t(!0)}catch(e){m();const n=e instanceof Error?e.message:"Failed to access microphone";u(n)}}),[m]),stopListening:n.useCallback((()=>{m(),t(!1);const e=new Uint8Array(128);for(let n=0;n<e.length;n++)e[n]=Math.floor(30+15*Math.sin(.1*n));i(e)}),[m])}};
//# sourceMappingURL=index.js.map
